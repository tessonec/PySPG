
#######################################################################
### :::~ Table with the name of the executable

###  CREATE TABLE IF NOT EXISTS executable 
###          (id INTEGER PRIMARY KEY, name CHAR(64))
name: name of the executable

#######################################################################
### :::~ Table with the defined entities

###  CREATE TABLE IF NOT EXISTS entities 
###          (id INTEGER PRIMARY KEY, name CHAR(64), varies INTEGER)

name: entity name (as defined in base.ct, and as appearing in parameters.dat file)
varies: whether the entity varies (1) or not (0)

#######################################################################
### :::~ Table with the set of values

###  CREATE TABLE IF NOT EXISTS values_set 
###        (id INTEGER PRIMARY KEY,  ... entities_values ... )
... entities_values ... is a set of columns equal to the entities table, with the corresponding values


#######################################################################
### :::~ Table with the output generated by the program (as defined in conf.stdout)

### CREATE TABLE IF NOT EXISTS results 
###       (id INTEGER PRIMARY KEY, values_set_id INTEGER, ... output_columns ...,
###        FOREIGN KEY(values_set_id) REFERENCES values_set(id))
values_set_id  : the id in the values_set table of the current set of values
... output_columns ... : a set of columns with labels given by the conf.stdout


#######################################################################
### :::~ Table with the running status of the processes

### CREATE TABLE IF NOT EXISTS run_status 
###       (id INTEGER PRIMARY KEY, values_set_id INTEGER, status CHAR(1), 
###        FOREIGN KEY (values_set_id ) REFERENCES values_set(id) )
values_set_id  : the id in the values_set table of the current set of values
status: the status of the program output. Status can be either 
                #:::~    'N': not run yet
                #:::~    'R': running
                #:::~    'D': successfully run (done)
                #:::~    'E': run but with non-zero error code

